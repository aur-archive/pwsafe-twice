--- pwsafe1.cpp	2011-05-18 22:06:52.424328914 +0900
+++ pwsafe.cpp	2011-05-18 22:33:52.480699995 +0900
@@ -398,6 +398,7 @@
 bool arg_username = false;
 bool arg_password = false;
 bool arg_details = false;
+bool twice = false;
 int arg_verbose = 0;
 int arg_debug = 0;
 #ifndef X_DISPLAY_MISSING
@@ -440,6 +441,7 @@
   {"display", required_argument, 0,'d'},
   {"selection", required_argument, 0,'s'},
   {"ignore", required_argument, 0,'G'},
+  {"twice", no_argument, 0, '2'},
 #endif
   // standard stuff
   {"quiet", no_argument, 0, 'q'},
@@ -1159,6 +1161,7 @@
   int c;
 
   while ((c = getopt_long (argc, argv,
+          "2"   // post username/password to the clipboard twice
           "l"   // long listing
           "a"   // add
           "e"   // edit
@@ -1308,6 +1311,9 @@
       case 'h':
         usage(false);
         throw ExitEx(0);
+      case '2':
+        twice = true;
+        break;
       case ':':
       case '?':
         // the message getopt() printed out is good enough
@@ -1343,6 +1349,7 @@
         "  -d, --display=XDISPLAY     override $DISPLAY (implies -x)\n"
         "  -s, --selection={Primary,Secondary,Clipboard,Both} select the X selection effected (implies -x)\n"
         "  -G, --ignore=NAME@HOST     add NAME@HOST to set of windows that don't receive the selection. Either NAME or @HOST can be omitted. (default is xclipboard, wmcliphist and klipper)\n"
+        "  -2, --twice                copy each value to the X selection twice\n"
 #endif
         "  -q, --quiet                print no extra information\n"
         "  -v, --verbose              print more information (can be repeated)\n"
@@ -2654,10 +2661,13 @@
       // if we're not emit()ing to stdout, then print notes before sending login/password to X clipboard.
       // this way if the notes contain a URL, the user can cut/paste that too
       emit_notes(e.notes);
+    const int times = (!arg_echo && twice) ? 2 : 1;
 
     if (username)
+      for(int i = 0; i < times; ++i)
       ::emit(e.groupname(), "username", e.default_login?e.the_default_login:e.login);
     if (password)
+      for(int i = 0; i < times; ++i)
       ::emit(e.groupname(), "password", e.password);
  
     if (arg_echo && arg_details)
